/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  EulDistributor,
  EulDistributorInterface,
} from "../../mining/EulDistributor";

const _abi = [
  {
    inputs: [
      {
        type: "address",
        internalType: "address",
        name: "eul_",
      },
      {
        type: "address",
        internalType: "address",
        name: "eulStakes_",
      },
    ],
    type: "constructor",
    stateMutability: "nonpayable",
  },
  {
    anonymous: false,
    type: "event",
    inputs: [
      {
        internalType: "address",
        type: "address",
        indexed: true,
        name: "newOwner",
      },
    ],
    name: "OwnerChanged",
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    outputs: [],
    inputs: [
      {
        type: "address",
        internalType: "address",
        name: "account",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "claimable",
        type: "uint256",
        internalType: "uint256",
      },
      {
        type: "bytes32[]",
        internalType: "bytes32[]",
        name: "proof",
      },
      {
        name: "stake",
        type: "address",
        internalType: "address",
      },
    ],
    name: "claim",
  },
  {
    name: "claimed",
    inputs: [
      {
        type: "address",
        internalType: "address",
        name: "",
      },
      {
        name: "",
        internalType: "address",
        type: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    type: "function",
    stateMutability: "view",
  },
  {
    name: "currRoot",
    inputs: [],
    outputs: [
      {
        internalType: "bytes32",
        type: "bytes32",
        name: "",
      },
    ],
    type: "function",
    stateMutability: "view",
  },
  {
    name: "eul",
    inputs: [],
    outputs: [
      {
        name: "",
        internalType: "address",
        type: "address",
      },
    ],
    type: "function",
    stateMutability: "view",
  },
  {
    type: "function",
    stateMutability: "view",
    name: "eulStakes",
    outputs: [
      {
        internalType: "address",
        type: "address",
        name: "",
      },
    ],
    inputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    inputs: [],
    name: "name",
  },
  {
    stateMutability: "view",
    type: "function",
    outputs: [
      {
        type: "address",
        internalType: "address",
        name: "",
      },
    ],
    inputs: [],
    name: "owner",
  },
  {
    name: "prevRoot",
    inputs: [],
    outputs: [
      {
        type: "bytes32",
        internalType: "bytes32",
        name: "",
      },
    ],
    type: "function",
    stateMutability: "view",
  },
  {
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
      },
    ],
    outputs: [],
    type: "function",
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "updateRoot",
    outputs: [],
    inputs: [
      {
        name: "newRoot",
        internalType: "bytes32",
        type: "bytes32",
      },
    ],
  },
];

export class EulDistributor__factory {
  static readonly abi = _abi;
  static createInterface(): EulDistributorInterface {
    return new utils.Interface(_abi) as EulDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EulDistributor {
    return new Contract(address, _abi, signerOrProvider) as EulDistributor;
  }
}
