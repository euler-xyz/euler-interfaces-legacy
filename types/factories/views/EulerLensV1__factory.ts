/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EulerLensV1,
  EulerLensV1Interface,
} from "../../views/EulerLensV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moduleGitCommit_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "borrowSPY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBorrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBalancesUnderlying",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "reserveFee",
        type: "uint32",
      },
    ],
    name: "computeAPYs",
    outputs: [
      {
        internalType: "uint256",
        name: "borrowAPY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "supplyAPY",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "eulerContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "markets",
            type: "address[]",
          },
        ],
        internalType: "struct EulerLensV1.Query",
        name: "q",
        type: "tuple",
      },
    ],
    name: "doQuery",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "underlying",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "eTokenAddr",
                type: "address",
              },
              {
                internalType: "address",
                name: "dTokenAddr",
                type: "address",
              },
              {
                internalType: "address",
                name: "pTokenAddr",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "eTokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "borrowIsolated",
                    type: "bool",
                  },
                  {
                    internalType: "uint32",
                    name: "collateralFactor",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "borrowFactor",
                    type: "uint32",
                  },
                  {
                    internalType: "uint24",
                    name: "twapWindow",
                    type: "uint24",
                  },
                ],
                internalType: "struct Storage.AssetConfig",
                name: "config",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "poolSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBalances",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrows",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "reserveBalance",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "reserveFee",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "borrowAPY",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "supplyAPY",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twap",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twapPeriod",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currPrice",
                type: "uint256",
              },
              {
                internalType: "uint16",
                name: "pricingType",
                type: "uint16",
              },
              {
                internalType: "uint32",
                name: "pricingParameters",
                type: "uint32",
              },
              {
                internalType: "address",
                name: "pricingForwarded",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "underlyingBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "eulerAllowance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "eTokenBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "eTokenBalanceUnderlying",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dTokenBalance",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "collateralValue",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liabilityValue",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "numBorrows",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "borrowIsolated",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "overrideCollateralValue",
                    type: "uint256",
                  },
                ],
                internalType: "struct IRiskManager.LiquidityStatus",
                name: "liquidityStatus",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlying",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "collateralFactor",
                    type: "uint32",
                  },
                ],
                internalType: "struct EulerLensV1.Override[]",
                name: "overrideLiabilities",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlying",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "collateralFactor",
                    type: "uint32",
                  },
                ],
                internalType: "struct EulerLensV1.Override[]",
                name: "overrideCollaterals",
                type: "tuple[]",
              },
            ],
            internalType: "struct EulerLensV1.ResponseMarket[]",
            name: "markets",
            type: "tuple[]",
          },
          {
            internalType: "address[]",
            name: "enteredMarkets",
            type: "address[]",
          },
        ],
        internalType: "struct EulerLensV1.Response",
        name: "r",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "eulerContract",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "addrs",
        type: "address[]",
      },
    ],
    name: "doQueryAccountLiquidity",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "underlying",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "collateralValue",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liabilityValue",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "numBorrows",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "borrowIsolated",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "overrideCollateralValue",
                    type: "uint256",
                  },
                ],
                internalType: "struct IRiskManager.LiquidityStatus",
                name: "status",
                type: "tuple",
              },
            ],
            internalType: "struct IRiskManager.AssetLiquidity[]",
            name: "markets",
            type: "tuple[]",
          },
        ],
        internalType: "struct EulerLensV1.ResponseAccountLiquidity[]",
        name: "r",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "eulerContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "markets",
            type: "address[]",
          },
        ],
        internalType: "struct EulerLensV1.Query[]",
        name: "qs",
        type: "tuple[]",
      },
    ],
    name: "doQueryBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "underlying",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "eTokenAddr",
                type: "address",
              },
              {
                internalType: "address",
                name: "dTokenAddr",
                type: "address",
              },
              {
                internalType: "address",
                name: "pTokenAddr",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "eTokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "borrowIsolated",
                    type: "bool",
                  },
                  {
                    internalType: "uint32",
                    name: "collateralFactor",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "borrowFactor",
                    type: "uint32",
                  },
                  {
                    internalType: "uint24",
                    name: "twapWindow",
                    type: "uint24",
                  },
                ],
                internalType: "struct Storage.AssetConfig",
                name: "config",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "poolSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBalances",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrows",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "reserveBalance",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "reserveFee",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "borrowAPY",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "supplyAPY",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twap",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "twapPeriod",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currPrice",
                type: "uint256",
              },
              {
                internalType: "uint16",
                name: "pricingType",
                type: "uint16",
              },
              {
                internalType: "uint32",
                name: "pricingParameters",
                type: "uint32",
              },
              {
                internalType: "address",
                name: "pricingForwarded",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "underlyingBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "eulerAllowance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "eTokenBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "eTokenBalanceUnderlying",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dTokenBalance",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "collateralValue",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liabilityValue",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "numBorrows",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "borrowIsolated",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "overrideCollateralValue",
                    type: "uint256",
                  },
                ],
                internalType: "struct IRiskManager.LiquidityStatus",
                name: "liquidityStatus",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlying",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "collateralFactor",
                    type: "uint32",
                  },
                ],
                internalType: "struct EulerLensV1.Override[]",
                name: "overrideLiabilities",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlying",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "collateralFactor",
                    type: "uint32",
                  },
                ],
                internalType: "struct EulerLensV1.Override[]",
                name: "overrideCollaterals",
                type: "tuple[]",
              },
            ],
            internalType: "struct EulerLensV1.ResponseMarket[]",
            name: "markets",
            type: "tuple[]",
          },
          {
            internalType: "address[]",
            name: "enteredMarkets",
            type: "address[]",
          },
        ],
        internalType: "struct EulerLensV1.Response[]",
        name: "r",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "eulerContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlying",
            type: "address",
          },
        ],
        internalType: "struct EulerLensV1.QueryIRM",
        name: "q",
        type: "tuple",
      },
    ],
    name: "doQueryIRM",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "kink",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseAPY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "kinkAPY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAPY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseSupplyAPY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "kinkSupplyAPY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupplyAPY",
            type: "uint256",
          },
        ],
        internalType: "struct EulerLensV1.ResponseIRM",
        name: "r",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleGitCommit",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200339c3803806200339c83398101604081905262000034916200003d565b60805262000057565b6000602082840312156200005057600080fd5b5051919050565b60805161332962000073600039600061012e01526133296000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806369a92ea31161005057806369a92ea314610129578063854c87271461015e5780638f863b2e1461017e57600080fd5b8063340d059a146100775780633d77bf7f146100a05780634c0cf6f714610109575b600080fd5b61008a610085366004612509565b6101a6565b6040516100979190612a58565b60405180910390f35b6100b36100ae366004612ad8565b610283565b6040516100979190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b61011c610117366004612b19565b61078f565b6040516100979190612b69565b6101507f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610097565b61017161016c366004612c74565b610999565b6040516100979190612cb1565b61019161018c366004612cdd565b610e7a565b60408051928352602083019190915201610097565b6060815167ffffffffffffffff8111156101c2576101c26122f2565b60405190808252806020026020018201604052801561021e57816020015b61020b6040518060800160405280600081526020016000815260200160608152602001606081525090565b8152602001906001900390816101e05790505b50905060005b825181101561027d5761024f83828151811061024257610242612d1e565b6020026020010151610999565b82828151811061026157610261612d1e565b60200260200101819052508061027690612d7c565b9050610224565b50919050565b6102c36040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81516040517f734c938f0000000000000000000000000000000000000000000000000000000081526002600482015260009073ffffffffffffffffffffffffffffffffffffffff83169063734c938f90602401602060405180830381865afa158015610333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103579190612db5565b60208501516040517fb409dd9b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529192506000919083169063b409dd9b90602401602060405180830381865afa1580156103cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f39190612dd2565b6040517fcab65f010000000000000000000000000000000000000000000000000000000081526004810182905290915060009073ffffffffffffffffffffffffffffffffffffffff85169063cab65f0190602401602060405180830381865afa158015610464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104889190612db5565b9050600081905060008173ffffffffffffffffffffffffffffffffffffffff1663fd2da3396040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105009190612dd2565b80885260208901516040517fb74b1ed500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529192506000919087169063b74b1ed590602401602060405180830381865afa15801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f9190612deb565b905060008373ffffffffffffffffffffffffffffffffffffffff16631f68f20a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106129190612dd2565b905060008473ffffffffffffffffffffffffffffffffffffffff1663a62b75a86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190612dd2565b61068f9085612e08565b6106999083612e45565b905060008573ffffffffffffffffffffffffffffffffffffffff1663d0134cb76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070c9190612dd2565b61071a8663ffffffff612e5d565b6107249190612e08565b61072e9083612e45565b905061074183600063ffffffff87610e7a565b60808d015260208c015261075b828663ffffffff87610e7a565b60a08d015260408c01526107758163ffffffff8087610e7a565b60c08d015260608c015250989a9950505050505050505050565b6040517f734c938f00000000000000000000000000000000000000000000000000000000815260056004820152606090839060009073ffffffffffffffffffffffffffffffffffffffff83169063734c938f90602401602060405180830381865afa158015610802573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108269190612db5565b9050835167ffffffffffffffff811115610842576108426122f2565b60405190808252806020026020018201604052801561088257816020015b6040805160208101909152606081528152602001906001900390816108605790505b50925060005b8451811015610990578173ffffffffffffffffffffffffffffffffffffffff166316078acf8683815181106108bf576108bf612d1e565b60200260200101516040518263ffffffff1660e01b81526004016108ff919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600060405180830381865afa15801561091c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109629190810190612e89565b84828151811061097457610974612d1e565b60209081029190910101515261098981612d7c565b9050610888565b50505092915050565b6109c46040518060800160405280600081526020016000815260200160608152602001606081525090565b42815243602082015281516040517f734c938f0000000000000000000000000000000000000000000000000000000081526002600482015260009073ffffffffffffffffffffffffffffffffffffffff83169063734c938f90602401602060405180830381865afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190612db5565b6040517f734c938f0000000000000000000000000000000000000000000000000000000081526005600482015290915060009073ffffffffffffffffffffffffffffffffffffffff84169063734c938f90602401602060405180830381865afa158015610ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af69190612db5565b602086015190915060609073ffffffffffffffffffffffffffffffffffffffff1615610bd75760208601516040517f16078acf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152908316906316078acf90602401600060405180830381865afa158015610b8e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610bd49190810190612e89565b90505b8560400151518151610be99190612e45565b67ffffffffffffffff811115610c0157610c016122f2565b604051908082528060200260200182016040528015610c3a57816020015b610c2761219e565b815260200190600190039081610c1f5790505b50604086015260005b8151811015610cea57600086604001518281518110610c6457610c64612d1e565b60200260200101519050828281518110610c8057610c80612d1e565b60209081029190910101515173ffffffffffffffffffffffffffffffffffffffff1681528251839083908110610cb857610cb8612d1e565b602002602001015160200151816103400181905250610cd988828787610f3c565b50610ce381612d7c565b9050610c43565b5080515b8660400151518251610d009190612e45565b811015610d92576000825182610d169190612e5d565b9050600087604001518381518110610d3057610d30612d1e565b6020026020010151905088604001518281518110610d5057610d50612d1e565b602090810291909101015173ffffffffffffffffffffffffffffffffffffffff168152610d7f89828888610f3c565b505080610d8b90612d7c565b9050610cee565b50602086015173ffffffffffffffffffffffffffffffffffffffff1615610e715760208601516040517f8ccb720b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015290841690638ccb720b90602401600060405180830381865afa158015610e25573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e6b9190810190612fb7565b60608601525b50505050919050565b6000806b033b2e3c9fd0803ce8000000610eae610e978883612e45565b6301e185586b033b2e3c9fd0803ce8000000611fab565b610eb89190612e5d565b915060008415610edc5784610ecd8789612e08565b610ed79190613051565b610edf565b60005b905063ee6b2800610ef663ffffffff861682612e5d565b610f009083612e08565b610f0a9190613051565b90506b033b2e3c9fd0803ce8000000610f26610e978383612e45565b610f309190612e5d565b91505094509492505050565b8251610f68907f06fdde0300000000000000000000000000000000000000000000000000000000612069565b60208401528251610f99907f95d89b4100000000000000000000000000000000000000000000000000000000612069565b8360400181905250826000015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ff0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611014919061308c565b60ff16606084015282516040517f8948874900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015290831690638948874990602401602060405180830381865afa15801561108b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110af9190612db5565b73ffffffffffffffffffffffffffffffffffffffff16608084018190526110d557611fa5565b60808301516040517f6b5e360600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015290831690636b5e360690602401602060405180830381865afa158015611147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116b9190612db5565b73ffffffffffffffffffffffffffffffffffffffff90811660a085015283516040517ffd7948d400000000000000000000000000000000000000000000000000000000815290821660048201529083169063fd7948d490602401602060405180830381865afa1580156111e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112069190612db5565b73ffffffffffffffffffffffffffffffffffffffff90811660c085015283516040517f4e9cfac20000000000000000000000000000000000000000000000000000000081529082166004820152600091841690634e9cfac29060240160a060405180830381865afa15801561127f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a391906130af565b60e085015250825184516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529116906370a0823190602401602060405180830381865afa158015611319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133d9190612dd2565b83610100018181525050826080015173ffffffffffffffffffffffffffffffffffffffff1663fea61faa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ba9190612dd2565b836101200181815250508260a0015173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611413573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114379190612dd2565b83610140018181525050826080015173ffffffffffffffffffffffffffffffffffffffff1663e73277d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b49190612dd2565b61016084015282516040517fb74b1ed500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529083169063b74b1ed590602401602060405180830381865afa158015611529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154d9190612deb565b63ffffffff1661018084015282516040517f7c2c69c000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152600091841690637c2c69c090602401602060405180830381865afa1580156115ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ee919061314d565b600b0b905061160e81856101400151866101200151876101800151610e7a565b6101c08601526101a08501525082516040517f9693fa6b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015290821690639693fa6b90602401606060405180830381865afa15801561168a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ae9190613170565b6102208601526102008501526101e084015282516040517f546422d600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529083169063546422d690602401606060405180830381865afa15801561172f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611753919061319e565b73ffffffffffffffffffffffffffffffffffffffff90811661028087015263ffffffff90911661026086015261ffff90911661024085015260208501511661179a57611fa5565b825160208501516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529116906370a0823190602401602060405180830381865afa15801561180d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118319190612dd2565b6102a0840152608083015160208501516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529116906370a0823190602401602060405180830381865afa1580156118ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d19190612dd2565b6102e0840152608083015160208501516040517f3af9e66900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152911690633af9e66990602401602060405180830381865afa15801561194d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119719190612dd2565b61030084015260a083015160208501516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529116906370a0823190602401602060405180830381865afa1580156119ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a119190612dd2565b6103208401528251602085015185516040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283166004820152908216602482015291169063dd62ed3e90604401602060405180830381865afa158015611a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab89190612dd2565b6102c084015282516040517fc07c155800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015260009184169063c07c155890602401600060405180830381865afa158015611b2f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611b759190810190612fb7565b9050805167ffffffffffffffff811115611b9157611b916122f2565b604051908082528060200260200182016040528015611bd657816020015b6040805180820190915260008082526020820152815260200190600190039081611baf5790505b5061038085015260005b8151811015611d25576040518060400160405280838381518110611c0657611c06612d1e565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1663e13e76e68860000151868681518110611c5c57611c5c612d1e565b60200260200101516040518363ffffffff1660e01b8152600401611ca392919073ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6040805180830381865afa158015611cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce391906131f2565b6020015163ffffffff168152508561038001518281518110611d0757611d07612d1e565b60200260200101819052508080611d1d90612d7c565b915050611be0565b5083516040517f73ebea9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201526000918516906373ebea9290602401600060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611ddd9190810190612fb7565b9050805167ffffffffffffffff811115611df957611df96122f2565b604051908082528060200260200182016040528015611e3e57816020015b6040805180820190915260008082526020820152815260200190600190039081611e175790505b5061036086015260005b8151811015611fa1576040518060400160405280838381518110611e6e57611e6e612d1e565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1663e13e76e6858581518110611ebf57611ebf612d1e565b60209081029190910101518a516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff9283166004820152911660248201526044016040805180830381865afa158015611f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5f91906131f2565b6020015163ffffffff168152508661036001518281518110611f8357611f83612d1e565b60200260200101819052508080611f9990612d7c565b915050611e48565b5050505b50505050565b600083801561204b57600184168015611fc657859250611fca565b8392505b50600283046002850494505b8415612045578586028687820414611fed57600080fd5b81810181811015611ffd57600080fd5b859004965050600185161561203a57858302838782041415871515161561202357600080fd5b8181018181101561203357600080fd5b8590049350505b600285049450611fd6565b50612061565b83801561205b576000925061205f565b8392505b505b509392505050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000085161790529051606091600091829173ffffffffffffffffffffffffffffffffffffffff8716916120ed9190613225565b600060405180830381855afa9150503d8060008114612128576040519150601f19603f3d011682016040523d82523d6000602084013e61212d565b606091505b509150915081612150576040518060200160405280600081525092505050612198565b8051602014612172578080602001905181019061216d9190613241565b612193565b806040516020016121839190613225565b6040516020818303038152906040525b925050505b92915050565b604080516103a081018252600080825260606020808401829052838501829052818401839052608080850184905260a080860185905260c0860185905286519081018752848152918201849052948101839052908101829052928301529060e0820190815260200160008152602001600081526020016000815260200160008152602001600063ffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600061ffff168152602001600063ffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016122de6040518060a00160405280600081526020016000815260200160008152602001600015158152602001600081525090565b815260200160608152602001606081525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715612344576123446122f2565b60405290565b60405160a0810167ffffffffffffffff81118282101715612344576123446122f2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156123b4576123b46122f2565b604052919050565b600067ffffffffffffffff8211156123d6576123d66122f2565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461240257600080fd5b50565b600082601f83011261241657600080fd5b8135602061242b612426836123bc565b61236d565b82815260059290921b8401810191818101908684111561244a57600080fd5b8286015b8481101561246e578035612461816123e0565b835291830191830161244e565b509695505050505050565b60006060828403121561248b57600080fd5b6040516060810167ffffffffffffffff82821081831117156124af576124af6122f2565b81604052829350843591506124c3826123e0565b9082526020840135906124d5826123e0565b81602084015260408501359150808211156124ef57600080fd5b506124fc85828601612405565b6040830152505092915050565b6000602080838503121561251c57600080fd5b823567ffffffffffffffff8082111561253457600080fd5b818501915085601f83011261254857600080fd5b8135612556612426826123bc565b81815260059190911b8301840190848101908883111561257557600080fd5b8585015b838110156125ad578035858111156125915760008081fd5b61259f8b89838a0101612479565b845250918601918601612579565b5098975050505050505050565b60005b838110156125d55781810151838201526020016125bd565b83811115611fa55750506000910152565b600081518084526125fe8160208601602086016125ba565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015612687578151805173ffffffffffffffffffffffffffffffffffffffff16885283015163ffffffff168388015260409096019590820190600101612644565b509495945050505050565b600081518084526020808501945080840160005b8381101561268757815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016126a6565b600060808084018351855260208085015181870152604080860151848289015283815180865260a09550858a019150858160051b8b0101858401935060005b82811015612a2f578b82037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600184528451805173ffffffffffffffffffffffffffffffffffffffff1683526104a088820151818a86015261277a828601826125e6565b915050878201518482038986015261279282826125e6565b9150506060808301516127a98287018260ff169052565b5050818b015173ffffffffffffffffffffffffffffffffffffffff8116858d015250818a015173ffffffffffffffffffffffffffffffffffffffff8116858c01525060c08281015173ffffffffffffffffffffffffffffffffffffffff811686830152505060e082810151805173ffffffffffffffffffffffffffffffffffffffff168683015260208101511515610100870152604081015163ffffffff908116610120880152606082015116610140870152608081015162ffffff166101608701525050610100820151610180818187015261012084015191506101a0828188015261014085015192506101c0838189015261016086015193506101e084818a015283870151945061020093506128c8848a018663ffffffff169052565b918601516102208981019190915290860151610240808a019190915291860151610260808a019190915292860151610280808a0191909152908601516102a0808a0191909152918601519350916102c090612928828a018661ffff169052565b86015193506102e06129418982018663ffffffff169052565b9286015193506103009261296c8985018673ffffffffffffffffffffffffffffffffffffffff169052565b918601516103208981019190915290860151610340808a019190915291860151610360808a019190915292860151610380808a0191909152908601516103a08901529085015180516103c089015260208101516103e089015260408101516104008901526060810151151561042089015260800151610440880152908401518684036104608801529150612a008383612630565b930151858403610480870152929150612a1b90508183612630565b968901969589019593505050600101612717565b5060608a015197508a810360608c0152612a498189612692565b9b9a5050505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612acb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612ab98583516126d8565b94509285019290850190600101612a7f565b5092979650505050505050565b600060408284031215612aea57600080fd5b612af2612321565b8235612afd816123e0565b81526020830135612b0d816123e0565b60208201529392505050565b60008060408385031215612b2c57600080fd5b8235612b37816123e0565b9150602083013567ffffffffffffffff811115612b5357600080fd5b612b5f85828601612405565b9150509250929050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015612c65578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251518885528051898601819052908901908390898701905b80831015612c50578351805173ffffffffffffffffffffffffffffffffffffffff1683528c0151612c398d840182805182526020810151602083015260408101516040830152606081015115156060830152608081015160808301525050565b5060c0820191508b84019350600183019250612bd9565b50978a01979550505091870191600101612b91565b50919998505050505050505050565b600060208284031215612c8657600080fd5b813567ffffffffffffffff811115612c9d57600080fd5b612ca984828501612479565b949350505050565b602081526000612cc460208301846126d8565b9392505050565b63ffffffff8116811461240257600080fd5b60008060008060808587031215612cf357600080fd5b8435935060208501359250604085013591506060850135612d1381612ccb565b939692955090935050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612dae57612dae612d4d565b5060010190565b600060208284031215612dc757600080fd5b8151612cc4816123e0565b600060208284031215612de457600080fd5b5051919050565b600060208284031215612dfd57600080fd5b8151612cc481612ccb565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612e4057612e40612d4d565b500290565b60008219821115612e5857612e58612d4d565b500190565b600082821015612e6f57612e6f612d4d565b500390565b80518015158114612e8457600080fd5b919050565b60006020808385031215612e9c57600080fd5b825167ffffffffffffffff811115612eb357600080fd5b8301601f81018513612ec457600080fd5b8051612ed2612426826123bc565b81815260c09182028301840191848201919088841115612ef157600080fd5b938501935b83851015612fab5784890381811215612f0f5760008081fd5b612f17612321565b8651612f22816123e0565b815260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08301811315612f565760008081fd5b612f5e61234a565b92508888015183526040808901518a8501526060808a01518286015260809150612f89828b01612e74565b9085015290880151908301528088019190915283529384019391850191612ef6565b50979650505050505050565b60006020808385031215612fca57600080fd5b825167ffffffffffffffff811115612fe157600080fd5b8301601f81018513612ff257600080fd5b8051613000612426826123bc565b81815260059190911b8201830190838101908783111561301f57600080fd5b928401925b82841015613046578351613037816123e0565b82529284019290840190613024565b979650505050505050565b600082613087577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561309e57600080fd5b815160ff81168114612cc457600080fd5b600060a082840312156130c157600080fd5b60405160a0810181811067ffffffffffffffff821117156130e4576130e46122f2565b60405282516130f2816123e0565b815261310060208401612e74565b6020820152604083015161311381612ccb565b6040820152606083015161312681612ccb565b6060820152608083015162ffffff8116811461314157600080fd5b60808201529392505050565b60006020828403121561315f57600080fd5b815180600b0b8114612cc457600080fd5b60008060006060848603121561318557600080fd5b8351925060208401519150604084015190509250925092565b6000806000606084860312156131b357600080fd5b835161ffff811681146131c557600080fd5b60208501519093506131d681612ccb565b60408501519092506131e7816123e0565b809150509250925092565b60006040828403121561320457600080fd5b61320c612321565b61321583612e74565b81526020830151612b0d81612ccb565b600082516132378184602087016125ba565b9190910192915050565b60006020828403121561325357600080fd5b815167ffffffffffffffff8082111561326b57600080fd5b818401915084601f83011261327f57600080fd5b815181811115613291576132916122f2565b6132c260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161236d565b91508082528560208285010111156132d957600080fd5b6132ea8160208401602086016125ba565b5094935050505056fea2646970667358221220edc3de024f0ef6f21501fa28c1e12f663b68db237b7902d6c36cb046dd0be67a64736f6c634300080a0033";

type EulerLensV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EulerLensV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EulerLensV1__factory extends ContractFactory {
  constructor(...args: EulerLensV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    moduleGitCommit_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EulerLensV1> {
    return super.deploy(
      moduleGitCommit_,
      overrides || {}
    ) as Promise<EulerLensV1>;
  }
  override getDeployTransaction(
    moduleGitCommit_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(moduleGitCommit_, overrides || {});
  }
  override attach(address: string): EulerLensV1 {
    return super.attach(address) as EulerLensV1;
  }
  override connect(signer: Signer): EulerLensV1__factory {
    return super.connect(signer) as EulerLensV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EulerLensV1Interface {
    return new utils.Interface(_abi) as EulerLensV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EulerLensV1 {
    return new Contract(address, _abi, signerOrProvider) as EulerLensV1;
  }
}
